/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>

// -----------------------------------------------------------------------------
// LED WORKAROUND
// -----------------------------------------------------------------------------

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&spi1 {
    compatible = "nordic,nrf-spim";

    /* Cannot be used together with i2c0. */

    status = "okay";
    mosi-pin = <6>;

    // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.

    sck-pin = <5>;
    miso-pin = <7>;

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "SK6812mini";

        /* SPI */

        reg = <0>;/* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <27>;/* There are per-key RGB, but the first 6 are underglow */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

// -----------------------------------------------------------------------------

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q  &kp W     &kp F  &kp P    &kp G      &kp J  &kp L      &kp U    &kp Y  &kp SEMI  &none
&none  &kp A  &kp R     &kp S  &kp T    &kp D      &kp H  &kp N      &kp E    &kp I     &kp O  &none
&none  &kp Z  &kp X     &kp C  &kp V    &kp B      &kp K  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &none
                     &kp LALT  &mo 1  &kp RET  &kp SPACE  &mo 2   &kp LGUI
            >;
        };

        lower_layer {
            bindings = <
&trans  &none  &none   &none   &none   &none     &kp MINUS  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none  &trans
&trans  &none  &none   &none   &none   &none     &kp EQUAL  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none  &trans
&trans  &none  &none   &none   &none   &none  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none   &none
                      &trans  &trans  &trans        &trans         &mo 3        &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &none  &none   &none  &none   &none  &kp PG_UP  &kp HOME    &kp UP    &kp END  &kp INS  &trans
&trans  &none  &none   &none  &none   &none  &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &trans
&trans  &none  &none   &none  &none   &none      &none     &none     &none      &none    &none   &none
                      &trans  &mo 3  &trans     &trans    &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
   &none  &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN  &kp C_BRI_UP    &kp C_PREV      &kp C_PP    &kp C_NEXT  &rgb_ug RGB_HUI  &ext_power EP_TOG
&kp CAPS  &kp F11  &kp F4  &kp F5  &kp F6   &kp SLCK  &kp C_BRI_DN  &kp C_VOL_DN    &kp C_MUTE  &kp C_VOL_UP            &none    &rgb_ug RGB_TOG
   &none  &kp F10  &kp F1  &kp F2  &kp F3      &none    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3       &bt BT_SEL 4
                           &trans  &trans     &trans        &trans        &trans        &trans
            >;
        };
    };
};
